/** @OnlyCurrentDoc */
var вкладки = {
  МЕНЮ: 1,
  ЗАКУП: 2,
  ГОТОВКА: 3,
  ПРОДУКТЫ: 4,
  РЕЦЕПТЫ: 5,
  ТИПЫ_И_ЕДИНИЦЫ_ИЗМЕРЕНИЙ_ПРОДУКТОВ: 6
};

var колонкиМеню = {
  ДЕНЬ: 1,
  ПРИЁМ_ПИЩИ: 2,
  БЛЮДО: 3,
  КОЛИЧЕСТВО_ЧЕЛОВЕК: 4
};

var колонкиЗакуп = {
  ТИП: 1,
  ПРОДУКТ: 2,
  ЕДИНИЦА_ИЗМЕРЕНИЯ: 3,
  КОЛИЧЕСТВО: 4,
  СТОИМОСТЬ: 5
};

var колонкиГотовка = {
  ДЕНЬ: 1,
  ПРИЁМ_ПИЩИ: 2,
  КОЛИЧЕСТВО_ПОРЦИЙ: 3,
  БЛЮДО: 4,
  ПРОДУКТ: 5,
  ЕДИНИЦА_ИЗМЕРЕНИЯ: 6,
  КОЛИЧЕСТВО: 7,
  ХОЛОДНАЯ_ОБРАБОТКА: 8,
  ТИП_ОБРАБОТКИ: 9,
  РЕЦЕПТ: 10
};

var колонкиРецепты = {
  НАЗВАНИЕ: 1,
  ПРОДУКТ: 2,
  ВЕС_БРУТТО: 3,
  ХОЛОДНАЯ_ОБРАБОТКА: 4,
  ТИП_ОБРАБОТКИ: 5,
  РЕЦЕПТ: 6
};

var колонкиПродукты = {
  НАЗВАНИЕ: 1,
  ТИП: 2,
  ЕДИНИЦА_ИЗМЕРЕНИЯ: 3,
  ГРАММ_НА_ЕД: 4,
  ЦЕНА: 5
};

function Посчитать() {

  var таблица = SpreadsheetApp.getActive();

  var вкладкаМеню = таблица.getSheetByName('Меню');
  var данныеМеню = вкладкаМеню.getDataRange().getValues();

  var вкладкаРецепты = таблица.getSheetByName('Рецепты');
  var данныеРецепты = вкладкаРецепты.getDataRange().getValues();

  var вкладкаПродукты = таблица.getSheetByName('Продукты');
  var данныеПродукты = вкладкаПродукты.getDataRange().getValues();

  var вкладкаГотовка = таблица.getSheetByName('Готовка');

  var вкладкаЗакуп = таблица.getSheetByName('Закуп');

  // первая строка после заголовка
  let перваяСтрока = 2;

  // очищаем неочищенное
  if (вкладкаЗакуп.getLastRow() > перваяСтрока)
    вкладкаЗакуп.deleteRows(перваяСтрока, вкладкаЗакуп.getLastRow() - перваяСтрока);
  if (вкладкаГотовка.getLastRow() > перваяСтрока)
    вкладкаГотовка.deleteRows(перваяСтрока, вкладкаГотовка.getLastRow() - перваяСтрока);

  // смотрим каждую строку Меню и вставляем продукты для каждого блюда
  for (var строкаМеню = 0, строкаЗакуп = перваяСтрока; строкаМеню < данныеМеню.length; строкаМеню++) {
    // перебираем рецепты
    for (var строкаРецепты = 0; строкаРецепты < данныеРецепты.length; строкаРецепты++) {
      // НИЧЕГО - пропускаем
      if (данныеМеню[строкаМеню][колонкиМеню.БЛЮДО - 1] == данныеРецепты[1][колонкиРецепты.НАЗВАНИЕ - 1])
        continue;

      // не наш рецепт - пропускаем
      if (данныеМеню[строкаМеню][колонкиМеню.БЛЮДО - 1] != данныеРецепты[строкаРецепты][колонкиРецепты.НАЗВАНИЕ - 1])
        continue;

      // перебираем Продукты для заполнения полей Закупа и Готовки
      for (var строкаПродукты = 0; строкаПродукты < данныеПродукты.length; строкаПродукты++) {
        // не тот продукт - пропускаем
        if (данныеРецепты[строкаРецепты][колонкиРецепты.ПРОДУКТ - 1] != данныеПродукты[строкаПродукты][колонкиПродукты.НАЗВАНИЕ - 1])
          continue;

        // заполняем Закуп
        // количество каждого продукта в блюде равно количеству в рецепте умноженное на количество человек для этого приёма пищи и поделить на грамм на единицу измерения (одно яйцо, например, 50 гр)
        вкладкаЗакуп.getRange(строкаЗакуп, колонкиЗакуп.ПРОДУКТ).setValue(данныеПродукты[строкаПродукты][колонкиПродукты.НАЗВАНИЕ - 1]);
        вкладкаЗакуп.getRange(строкаЗакуп, колонкиЗакуп.ТИП).setValue(данныеПродукты[строкаПродукты][колонкиПродукты.ТИП - 1]);
        вкладкаЗакуп.getRange(строкаЗакуп, колонкиЗакуп.ЕДИНИЦА_ИЗМЕРЕНИЯ).setValue(данныеПродукты[строкаПродукты][колонкиПродукты.ЕДИНИЦА_ИЗМЕРЕНИЯ - 1]);
        вкладкаЗакуп.getRange(строкаЗакуп, колонкиЗакуп.КОЛИЧЕСТВО).setValue((данныеРецепты[строкаРецепты][колонкиРецепты.ВЕС_БРУТТО - 1] * данныеМеню[строкаМеню][колонкиМеню.КОЛИЧЕСТВО_ЧЕЛОВЕК - 1]) / данныеПродукты[строкаПродукты][колонкиПродукты.ГРАММ_НА_ЕД - 1]);
        вкладкаЗакуп.getRange(строкаЗакуп, колонкиЗакуп.СТОИМОСТЬ).setValue((данныеРецепты[строкаРецепты][колонкиРецепты.ВЕС_БРУТТО - 1] * данныеМеню[строкаМеню][колонкиМеню.КОЛИЧЕСТВО_ЧЕЛОВЕК - 1] * данныеПродукты[строкаПродукты][колонкиПродукты.ЦЕНА - 1]) / данныеПродукты[строкаПродукты][колонкиПродукты.ГРАММ_НА_ЕД - 1]);

        // заполняем Готовку в соответствии с количеством человек
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ДЕНЬ).setValue(данныеМеню[строкаМеню][колонкиМеню.ДЕНЬ - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ПРИЁМ_ПИЩИ).setValue(данныеМеню[строкаМеню][колонкиМеню.ПРИЁМ_ПИЩИ - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.КОЛИЧЕСТВО_ПОРЦИЙ).setValue(данныеМеню[строкаМеню][колонкиМеню.КОЛИЧЕСТВО_ЧЕЛОВЕК - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.БЛЮДО).setValue(данныеМеню[строкаМеню][колонкиМеню.БЛЮДО - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ПРОДУКТ).setValue(данныеПродукты[строкаПродукты][колонкиПродукты.НАЗВАНИЕ - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ЕДИНИЦА_ИЗМЕРЕНИЯ).setValue(данныеПродукты[строкаПродукты][колонкиПродукты.ЕДИНИЦА_ИЗМЕРЕНИЯ - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.КОЛИЧЕСТВО).setValue((данныеРецепты[строкаРецепты][колонкиРецепты.ВЕС_БРУТТО - 1] * данныеМеню[строкаМеню][колонкиМеню.КОЛИЧЕСТВО_ЧЕЛОВЕК - 1]) / данныеПродукты[строкаПродукты][колонкиПродукты.ГРАММ_НА_ЕД - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ХОЛОДНАЯ_ОБРАБОТКА).setValue(данныеРецепты[строкаРецепты][колонкиРецепты.ХОЛОДНАЯ_ОБРАБОТКА - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.ТИП_ОБРАБОТКИ).setValue(данныеРецепты[строкаРецепты][колонкиРецепты.ТИП_ОБРАБОТКИ - 1]);
        вкладкаГотовка.getRange(строкаЗакуп, колонкиГотовка.РЕЦЕПТ).setValue(данныеРецепты[строкаРецепты][колонкиРецепты.РЕЦЕПТ - 1]);

        // Продукт добавлен, переходим к следующему
        строкаЗакуп++;
        break;
      }
    }
  }

  var данныеЗакуп = вкладкаЗакуп.getDataRange().getValues();

  // теперь считаем вместе повторяющиеся продукты
  for (var строкаЗакуп = 1; строкаЗакуп < данныеЗакуп.length; строкаЗакуп++) {
    // пропускаем пустые строки
    if (данныеЗакуп[строкаЗакуп][колонкиЗакуп.ПРОДУКТ - 1] == '')
      continue;

    // сравниваем со следующими строками
    for (var проверочнаяСтрока = строкаЗакуп + 1; проверочнаяСтрока < данныеЗакуп.length; проверочнаяСтрока++) {
      // не такой же продукт - пропускаем
      if (данныеЗакуп[строкаЗакуп][колонкиЗакуп.ПРОДУКТ - 1] != данныеЗакуп[проверочнаяСтрока][колонкиЗакуп.ПРОДУКТ - 1])
        continue;

      // суммируем
      данныеЗакуп[строкаЗакуп][колонкиЗакуп.КОЛИЧЕСТВО - 1] += данныеЗакуп[проверочнаяСтрока][колонкиЗакуп.КОЛИЧЕСТВО - 1];
      данныеЗакуп[строкаЗакуп][колонкиЗакуп.СТОИМОСТЬ - 1] += данныеЗакуп[проверочнаяСтрока][колонкиЗакуп.СТОИМОСТЬ - 1];
      вкладкаЗакуп.getRange(строкаЗакуп + 1, колонкиЗакуп.КОЛИЧЕСТВО).setValue(данныеЗакуп[строкаЗакуп][колонкиЗакуп.КОЛИЧЕСТВО - 1]);
      вкладкаЗакуп.getRange(строкаЗакуп + 1, колонкиЗакуп.СТОИМОСТЬ).setValue(данныеЗакуп[строкаЗакуп][колонкиЗакуп.СТОИМОСТЬ - 1]);

      // и помечаем строку на удаление: очищаем название продукта
      данныеЗакуп[проверочнаяСтрока][колонкиЗакуп.ПРОДУКТ - 1] = '';
      вкладкаЗакуп.getRange(проверочнаяСтрока + 1, колонкиЗакуп.ПРОДУКТ).setValue('');
    }
  }

  // удаляем пустые строки
  for (var строкаЗакуп = 1; строкаЗакуп < вкладкаЗакуп.getLastRow(); /* следующая строка тоже может быть пустой */) {
    if (вкладкаЗакуп.getRange(строкаЗакуп + 1, колонкиЗакуп.ПРОДУКТ).getValue() == '') {
      вкладкаЗакуп.deleteRow(строкаЗакуп + 1);
      // следующая строка тоже может быть пустой
      continue;
    }
    строкаЗакуп++;
  }

  // упорядочиваем по типу
  вкладкаЗакуп.sort(колонкиЗакуп.ТИП);

  // объединяем одинаковые ячейки: закуп
  данныеЗакуп = вкладкаЗакуп.getDataRange().getValues();
  вкладкаЗакуп.getRange(2, колонкиЗакуп.ТИП, данныеЗакуп.length - 1).setVerticalAlignment('middle').setHorizontalAlignment('center');
  for (var верхняяСтрока = 1, нижняяСтрока = 2, одинаковыхСтрок = 2; нижняяСтрока < данныеЗакуп.length; нижняяСтрока++) {
    if (данныеЗакуп[верхняяСтрока][колонкиЗакуп.ТИП - 1] == данныеЗакуп[нижняяСтрока][колонкиЗакуп.ТИП - 1]) {
      вкладкаЗакуп.getRange(верхняяСтрока + 1, колонкиЗакуп.ТИП, одинаковыхСтрок).merge();
      одинаковыхСтрок++;
    }
    else {
      верхняяСтрока = нижняяСтрока;
      одинаковыхСтрок = 2;
    }
  }

  // объединяем одинаковые ячейки: готовка
  var данныеГотовка = вкладкаГотовка.getDataRange().getValues();
  for (var колонка = 0; колонка <= (колонкиГотовка.РЕЦЕПТ - 1); колонка++) {

    if (колонка == (колонкиГотовка.ПРОДУКТ - 1) || 
        колонка == (колонкиГотовка.ЕДИНИЦА_ИЗМЕРЕНИЯ - 1) ||
        колонка == (колонкиГотовка.КОЛИЧЕСТВО - 1) || 
        колонка == (колонкиГотовка.ТИП_ОБРАБОТКИ - 1) || 
        колонка == (колонкиГотовка.ХОЛОДНАЯ_ОБРАБОТКА - 1))
        continue;

    вкладкаГотовка.getRange(2, колонка + 1, данныеГотовка.length - 1).setVerticalAlignment('middle').setHorizontalAlignment('center');
    for (var верхняяСтрока = 1, нижняяСтрока = 2, одинаковыхСтрок = 2; нижняяСтрока < данныеГотовка.length; нижняяСтрока++) {
      if ((данныеГотовка[верхняяСтрока][колонка] == данныеГотовка[нижняяСтрока][колонка]) || (данныеГотовка[нижняяСтрока][колонка] == "")) {
        вкладкаГотовка.getRange(верхняяСтрока + 1, колонка + 1, одинаковыхСтрок).merge();
        одинаковыхСтрок++;
      }
      else {
        верхняяСтрока = нижняяСтрока;
        одинаковыхСтрок = 2;
      }
    }
  }
};